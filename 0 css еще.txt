классы
https://den7466.github.io/Module01-Test/portfolio/  
===========
slidesPerScroll
в слайдах.
==
шрифты скачать локально
https://webfonts.pro
==
.background-img {
  background-image: url(https://cutewallpaper.org/21/  h-.jpg);
  max-width: 800px;
  height: 400px;
  background-size: cover;
  background-repeat: no-repeat;
  margin: 30px auto;
  
box-shadow: 0 0 5px #2a3cad;
  border-radius: 10px;  
===
<label><input type="checkbox" value="1" name="k"><span></span></label>

label {
 width: 32px; /* Ширина рисунка */
 height: 26px; /* Высота рисунка */
 display: block; /* Блочный элемент */
 position: relative; /* Относительное позиционирование */
}

input[type="checkbox"] + span {
 position: absolute; /* Абсолютное позиционирование */
 left: 0; top: 0;
 width: 100%; height: 100%;
 background: url(images/switch.png) no-repeat; /* Фоновый рисунок */
 cursor: pointer; /* Курсор в виде руки */
}

input[type="checkbox"]:checked + span  	{
 background-position: 0 -26px;
}
==
.box {
   display: grid;
   grid-template-columns: repeat(3,1fr);
   grid-template-areas: "a b c" "d d c";
   gap: 10px;
   text-align: center;
}

.box > div {
   background-color: lightblue;
   padding: 20px;
}
.box > div:nth-child(1) {
   grid-area: a;
}
.box > div:nth-child(2) {
   grid-area: b;
}
.box > div:nth-child(3) {
   grid-area: c;
}
.box > div:nth-child(4) {
   grid-area: d;
}
==
animation: typing 1.5s steps(20, end);
@-webkit-keyframes typing {
 from {
  width:0
 }
 to {
  width:100%
 }
}
@keyframes typing {
 from {
  width:0
 }
 to {
  width:100%
 }
}

== трясется тряска
animation: shaking-text .3s linear infinite both;
@-webkit-keyframes shaking-text {
 0% {
  transform:translate(0)
 }
 20% {
  transform:translate(-2px,2px)
 }
 40% {
  transform:translate(-2px,-2px)
 }
 60% {
  transform:translate(2px,2px)
 }
 80% {
  transform:translate(2px,-2px)
 }
 to {
  transform:translate(0)
 }
}
@keyframes shaking-text {
 0% {
  transform:translate(0)
 }
 20% {
  transform:translate(-2px,2px)
 }
 40% {
  transform:translate(-2px,-2px)
 }
 60% {
  transform:translate(2px,2px)
 }
 80% {
  transform:translate(2px,-2px)
 }
 to {
  transform:translate(0)
 }
}
==
мобильный
размеры

h2 30px заголовок
text 12px текст description
section 60px между секциями
logo 96*25px лого
button  10px кнопка
footer 10px copy копирайт футер
=
  <style>
   [data-tooltip] {
    position: relative; /* Относительное позиционирование */ 
   }
   [data-tooltip]::after {
    content: attr(data-tooltip); /* Выводим текст */
    position: absolute; /* Абсолютное позиционирование */
    width: 300px; /* Ширина подсказки */
    left: 0; top: 0; /* Положение подсказки */
    background: #3989c9; /* Синий цвет фона */
    color: #fff; /* Цвет текста */
    padding: 0.5em; /* Поля вокруг текста */
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3); /* Параметры тени */
    pointer-events: none; /* Подсказка */
    opacity: 0; /* Подсказка невидима */
    transition: 1s; /* Время появления подсказки */
   } 
   [data-tooltip]:hover::after {
    opacity: 1; /* Показываем подсказку */
    top: 2em; /* Положение подсказки */
   }
  </style>
 </head>
 <body>
  <p data-tooltip="Всплывающая подсказка сообщает о чём-то многозначном и полезном...">
   Наведи сюда курсор.</p>
 </body>
</html>
==
кнопка вверх наверх up 
___поставить в header
id="headerTop" 
___ html
<a href="#headerTop" class="button-up hidden" id="btnUp"></a>

___ css 
.button-up {
    position: fixed;
    background-image: url(../img/icons/Arrow.svg);
    width: 52px;
    height: 55px;
    cursor: pointer;    
    border: none;
    text-decoration: none;
    bottom: 20px;
    right: 20px;
    transition: 0.2s;
}
.button-up.hidden {
    opacity: 0;
}
.button-up.visible {
    opacity: 1;
}

___ js

// Button Up

window.onscroll = function(){scrollFunction()};

const upbuttons = document.querySelectorAll(".button-up");

for (const upbutton of upbuttons) {
    upbutton.addEventListener("click", clickHandler);
}

function clickHandler(e) {
    e.preventDefault();
    const href = this.getAttribute("href");

document.querySelector(href).scrollIntoView({
    behavior: "smooth"
});
}

function scrollFunction(){
    if ( document.body.scrollTop > 1000 || document.documentElement.scrollTop > 1000){
        document.getElementById('btnUp').className = 'button-up visible';
    } else {
        document.getElementById('btnUp').className = 'button-up hidden';
    }
}

==
<meta name="viewport" content="width=device-width, initial-scale=1.0"/>

<link rel= "stylesheet" href= "device.css" media= "only screen and (max-device width:640px)"/>

=====ховер
.class {
  color: #000;
}
@media (any-hover: hover) {
  .class:hover {
    color: #f00;
  }
}
===
 hover можно выключать. Есть 2 способа:
1) через медиа-запрос min-width:
media(min-width: 767px) {&:hover {...}} (медиа-запрос для устройств, экран которых >767px)
2) этот способ чуть более универсальный, выбирает все устройства, поддерживающие hover

@media (any-hover: hover) {
        &:hover{

        }
} 
часто вижу, что на мобилках есть hover, хотя он там не нужен, так как у touch-скринов в принципе нет понятия "наведение", есть понятие "touch", в простонародье "тык" 
если hover необходим (такие случаи бывают, если, например, на компьютере при hover надо показать какую-либо инфу), то стили для мобилок надо писать сразу такие, как у вас в hover, например:

&:hover{
       opacity: 1;
 }
@media (max-width: 768px){
    opacity: 1;
}
===
размер экрана
@media (max-width: 2000px)
@media (max-width: 1440px)
@media (max-width: 960px)
планшеты
@media (max-width: 768px)
смартфоны
@media (max-width: 567px)
@media (max-width: 480px)
@media (max-width: 320px)
? Высота:
1349 ? 625
 to go for a 600px - 960px width max but using percentages    */    
==
$r_minmob: 320px;
$r_mob_360: 360px;
$r_mob_400: 400px;
$r_mob_500: 500px;
$r_tab: 768px;
$r_tab_900: 900px;
$r_desk: 1000px;
$r_desk_hd: 1200px;
$r_desk_1280: 1280px;
$r_desk_wxga_xxl: 1360px;


@media (max-width: $r_tab_500) {
		padding: 2rem 15px 0;
	}


<style type="text/css">    
/* default styles here for older browsers.       I tend to go for a 600px - 960px width max but using percentages    */

@media only screen and (min-width: 960px) {        /* styles for browsers larger than 960px; */    }    

@media only screen and (min-width: 1440px) {        /* styles for browsers larger than 1440px; */    }    

@media only screen and (min-width: 2000px) {        /* for sumo sized (mac) screens */    }   

 @media only screen and (max-device-width: 480px) {       /* styles for mobile browsers smaller than 480px; (iPhone) */    } 
   
@media only screen and (device-width: 768px) {       /* default iPad screens */    }    /* different techniques for iPad screening */    

@media only screen and (min-device-width: 481px) and (max-device-width: 1024px) and (orientation:portrait) {      /* For portrait layouts only */    }    

@media only screen and (min-device-width: 481px) and (max-device-width: 1024px) and (orientation:landscape) {      /* For landscape layouts only */
=======ховер медиа отключить ховер адаптив

@media (min-width: 390px) {
    color: #000;
}

@media (min-width: 499px) {
    color: #000;
}

@media (min-width: 990px) {
    color: #000;
}

 @media screen and (max-width: 1000px) {
#header {
	background:#543567; /* Красим шапку */
	}
   }
 @media screen and (min-width: 1000px) {
 .txt {
      font: 25px Verdana bold; /* Показываем заголовок */
      position:relative;
      top; 15px;
      left: 30px;
      display:none;	
	}
   }
@media screen and (max-width: 1000px) {
#content {
	 background:#657493; /* Меняем цвет текста и фона содержимого */
	 color:#fff;			
	}
   }
@media screen and (max-width: 1000px) {
    img {
	float:right; /* Смещаем логотип вправо */			
	}
   }
==
бем бэм
«что это?»
Название элемента характеризует смысл («что это?» — «пункт»: item, «текст»: text), а не состояние («какой, как выглядит?» — «красный»: red, «большой»: big).

main
header
>logo
>nav>header__nav
>header__item
>header__link
>header__tel
>header__cart
>header__counter (счетчик)

class="container" 
  "slider" 
   "slide" 
    "title" 
    "slide-text" 
    "button button-primary" 
===
слайдер шаблон slider
скрол обычный
= родилелю:
overflow: hidden;
height: 597px;
=детю
width: auto;
overflow-x: scroll;
overflow-y: hidden;
padding-bottom: 136px;
==

html,
      body {
        position: relative;
        height: 100%;
      }

      .swiper {
        width: 100%;
        height: 100%;
      }

      .swiper-slide {
        text-align: center;
        font-size: 18px;
        background: #fff;

        /* Center slide text vertically */
        display: -webkit-box;
        display: -ms-flexbox;
        display: -webkit-flex;
        display: flex;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        -webkit-justify-content: center;
        justify-content: center;
        -webkit-box-align: center;
        -ms-flex-align: center;
        -webkit-align-items: center;
        align-items: center;
      }

      .swiper-slide img {
        display: block;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
<!-- Swiper -->
    <div class="swiper mySwiper">
      <div class="swiper-wrapper">
        <div class="swiper-slide">Slide 1</div>        
        <div class="swiper-slide">Slide 9</div>
      </div>

      <div class="swiper-button-next"></div>
      <div class="swiper-button-prev"></div>
      <div class="swiper-pagination"></div>
    </div>

<!-- Swiper JS -->
    <script defer src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>

    <!-- Initialize Swiper -->
    <script>
      var swiper = new Swiper(".mySwiper", {
        slidesPerView: 3,
        spaceBetween: 30,
        slidesPerGroup: 3,
        loop: true,
        loopFillGroupWithBlank: true,
        pagination: {
          el: ".swiper-pagination",
          clickable: true,
        },
        navigation: {
          nextEl: ".swiper-button-next",
          prevEl: ".swiper-button-prev",
        },
      });
    </script>


еще раз верстка
<!-- slider -->
            <div class="slider">
                <div class="swiper offerSwiper">
                    <div class="swiper-wrapper">
                        <!-- slide 1 -->
                        <div class="swiper-slide swiper-slide_white swiper-slide_milk">
                            <h3 class="swiper-slide__title">Молочные продукты</h3>
                            <div class="swiper-slide__hover">                                
                                <p class="swiper-slide__text">В наши дни появилась мода на&nbsp;здоровое питание, поэтому на&nbsp;рынке питания разработали органическое молоко. Органическое молоко является продуктом органического животноводства</p>                        
                                <a class="swiper-slide__link" href="#">Подробнее</a>
                            </div>
                        </div>
                        <!-- slide 2 -->
                        <div class="swiper-slide swiper-slide_white swiper-slide_pasta">
                            <h3 class="swiper-slide__title">Бакалея</h3>
                            <div class="swiper-slide__hover">                                
                                <p class="swiper-slide__text">В наши дни появилась мода на&nbsp;здоровое питание, поэтому на&nbsp;рынке питания разработали органическое молоко. Органическое молоко является продуктом органического животноводства</p>                        
                                <a class="swiper-slide__link" href="#">Подробнее</a>
                            </div>
                        </div>
                        <!-- slide 3 -->
                        <div class="swiper-slide swiper-slide_white swiper-slide_steaks">
                            <h3 class="swiper-slide__title">Мясо, птица</h3>
                            <div class="swiper-slide__hover">                                
                                <p class="swiper-slide__text">В наши дни появилась мода на&nbsp;здоровое питание, поэтому на&nbsp;рынке питания разработали органическое молоко. Органическое молоко является продуктом органического животноводства</p>                        
                                <a class="swiper-slide__link" href="#">Подробнее</a>
                            </div>
                        </div>
                        <!-- slide 4 -->
                        <div class="swiper-slide swiper-slide_white swiper-slide_milk">
                            <h3 class="swiper-slide__title">Молочные продукты</h3>
                            <div class="swiper-slide__hover">                                
                                <p class="swiper-slide__text">В наши дни появилась мода на&nbsp;здоровое питание, поэтому на&nbsp;рынке питания разработали органическое молоко. Органическое молоко является продуктом органического животноводства</p>                        
                                <a class="swiper-slide__link" href="#">Подробнее</a>
                            </div>
                        </div>
                        <!-- slide 5 -->
                        <div class="swiper-slide swiper-slide_white swiper-slide_pasta">
                            <h3 class="swiper-slide__title">Бакалея</h3>
                            <div class="swiper-slide__hover">                                
                                <p class="swiper-slide__text">В наши дни появилась мода на&nbsp;здоровое питание, поэтому на&nbsp;рынке питания разработали органическое молоко. Органическое молоко является продуктом органического животноводства</p>                        
                                <a class="swiper-slide__link" href="#">Подробнее</a>
                            </div>
                        </div>
                        <!-- slide 6 -->
                        <div class="swiper-slide swiper-slide_white swiper-slide_steaks">
                            <h3 class="swiper-slide__title">Мясо, птица</h3>
                            <div class="swiper-slide__hover">                                
                                <p class="swiper-slide__text">В наши дни появилась мода на&nbsp;здоровое питание, поэтому на&nbsp;рынке питания разработали органическое молоко. Органическое молоко является продуктом органического животноводства</p>                        
                                <a class="swiper-slide__link" href="#">Подробнее</a>
                            </div>
                        </div>
                        <!-- slide 7 -->
                        <div class="swiper-slide swiper-slide_white swiper-slide_milk">
                            <h3 class="swiper-slide__title">Молочные продукты</h3>
                            <div class="swiper-slide__hover">                                
                                <p class="swiper-slide__text">В наши дни появилась мода на&nbsp;здоровое питание, поэтому на&nbsp;рынке питания разработали органическое молоко. Органическое молоко является продуктом органического животноводства</p>                        
                                <a class="swiper-slide__link" href="#">Подробнее</a>
                            </div>
                        </div>
                        <!-- slide 8 -->
                        <div class="swiper-slide swiper-slide_white swiper-slide_pasta">
                            <h3 class="swiper-slide__title">Бакалея</h3>
                            <div class="swiper-slide__hover">                                
                                <p class="swiper-slide__text">В наши дни появилась мода на&nbsp;здоровое питание, поэтому на&nbsp;рынке питания разработали органическое молоко. Органическое молоко является продуктом органического животноводства</p>                        
                                <a class="swiper-slide__link" href="#">Подробнее</a>
                            </div>
                        </div>
                        <!-- slide 9 -->
                        <div class="swiper-slide swiper-slide_white swiper-slide_steaks">
                            <h3 class="swiper-slide__title">Мясо, птица</h3>
                            <div class="swiper-slide__hover">                                
                                <p class="swiper-slide__text">В наши дни появилась мода на&nbsp;здоровое питание, поэтому на&nbsp;рынке питания разработали органическое молоко. Органическое молоко является продуктом органического животноводства</p>                        
                                <a class="swiper-slide__link" href="#">Подробнее</a>
                            </div>
                        </div>
                    </div>
                    <div class="swiper-button-next"></div>
                    <div class="swiper-button-prev"></div>
                    <div class="swiper-pagination"></div>
                    </div>
            </div>
=
<input class="popup-tel" type="tel" name="popup" id="" placeholder="+7 (" required>

.popup-mail {
    display: block;
    width: 100%;
    padding: 10px 19px;
    font-size: 18px;
    height: 100%;
    margin-bottom: 12px;
    box-sizing: border-box;
    border: 1px solid transparent;
}
.popup-mail:focus {
    outline: 1px solid #FBF138;
    background: #FFFFFF;
}
.popup-mail:focus:invalid {
    outline: 1px solid #AE0303;
}
===
часто используемые шаблон
== пиксель перфект pixel perf
Ctrl+h Shift+H (показать скрыть)
Ctrl+i Shift+I (замок двигать)
лево право двигать

photoshop 
Ctrl+H убрать вспомогательные линии
= псевдоклассы бефо афте
&::before
	content: '';
display: block;
width: 25px;
height: 25px;
opacity: .8;

==афте &::after { 
content: '';
position: absolute;
background-color: rgba($green, 0.6);
bottom: 3px;
left: 0;
width: 100%;
display: block;

== flex флекс
display: flex;
justify-content: space-between;
align-items: center;
flex-direction: column;
gap: 15px;

&:hover
=== background фон bac иш bi i
background-image: url(../images/refresh.svg);
background-size: contain;
background-repeat: no-repeat;
background-position: center center;


width: 25px;
height: 25px;
max-width: 100%;


== отступы margin padding
box-sizing: border-box;
border: 1px solid rgba(39, 48, 15, 0.4);
border-radius: 2rem;
padding: 40px 30px 40px;

== шрифт размер шрифта font
font-size: 3	
font-weight: 700;
font-family: sans-serif;
font-style: italic;
line-height: 1.2;
padding: 0;
margin: 0;
letter-spacing: 1px;

== link ссылки a а
color: green;
text-decoration-color: $green;
text-decoration: none;

== ul список 
padding-left: 0;
list-style: none;

== телефон почта емаил
<a class="fo" href="tel:+79453425555">+7 945 342 55 55</a>
<a class="fo" href="mailto:healthlyfood@mail.ru">healthlyfood@mail.ru</a>

button btn кнопка 
padding: 30px 60px;
    font-weight: 500;
    font-size: 16px;
    line-height: 20px;
    cursor: pointer;
    border: 1px solid #FFFFFF;
	border: 1px solid #FFFFFF;
    color: #FFFFFF;
    background-color: #020C1E;
    transition: 0.3s;
===
--------------------------------добавить иконки соцсетей шаблон
<ul class="social-icons">
  <li><a class="social-icon-twitter" href="#" title="..." target="_blank" rel="noopener"></a></li>
  <li><a class="social-icon-fb" href="#" title="..." target="_blank" rel="noopener"></a></li>
  <li><a class="social-icon-vk" href="#" title="..." target="_blank" rel="noopener"></a></li>
  <li><a class="social-icon-telegram" href="#" title="..." target="_blank" rel="noopener"></a></li>
  <li><a class="social-icon-youtube" href="#" title="..." target="_blank" rel="noopener"></a></li>
</ul>
==
обтекание текста: 
word-break: normal;
================ 
игра https://ohmygit.org/
https://learngitbranching.js.org/?locale=ru_RU
https://overapi.com/git шпаргалка

…or create a new repository on the command line
echo "# Module02-Test" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/keaasd/Module02-Test.git
git push -u origin main

===
…or push an existing repository from the command line

git remote add origin https://github.com/keaasd/Module02-Test.git
git branch -M main
git push -u origin main
==
анимация
transform: rotate(0.5turn);
animation: typing 1.5s steps(20, end);
-
= Рекомендации по формату и размеру фавиконки
<link rel="icon" type="image/png" sizes="32x32" href="favicon/favicon-32x32.png">
Размер: 
120 × 120, 
32 × 32 или 
16 × 16 пикселей.

Формат: SVG (рекомендуемый), ICO, GIF, JPEG, PNG, BMP. Анимация не поддерживается.
 rel="icon"
= тень box shadow
// box-shadow: 0 0 0 1px rgba($green, 0.4), 0 0 0 53px rgba($green, 0), 0 0 0 54px rgba($green, 0.4);
=мобильный советы адаптив
размеры

h2 30px заголовок
text 12px текст description
section 60px секция
logo 96*25px лого
button  10px кнопка
footer 10px copy копирайт футер
=

= пример названий медиа экранов


$r_minmob: 320px;
$r_mob_360: 360px;
$r_desk_wxga_xxl: 1360px;

<svg fill="#d26a22"
==
Насчет модальных окон. Мне подсказали такой вариант...может кому то поможет...надеюсь никого не дезинформирую, поэтому решайте сами применять или нет
В js прописать:

function openModal(name) {
   document.body.className = 'js-modal-' + name;
}

function closeModal() {
   document.body.className = '';
}

Вместо 'js-modal-' пишите любое имя какое хотите..остальное не менять и на конце обязательно -. Потом когда будете прописывать свойства в css, то будет, например, такая запись
 .js-modal-menu #modal {
   display: block;
}

В html где прописываете onclick="openModal() в скобочка пишите любое имя, одно для формы, другое для всплывающего меню, например, для формы onclick="openModal('form'), а для меню onclick="openModal('menu')

В css оформляете окна как на уроках 
==
/* ==== стрелка наверх =========================*/
.back_to_top {
    position: fixed;
    bottom: 80px;
    right: 40px;    
    width: 30px;
    height: 30px;
    text-align: center;
    line-height: 30px;
    font-weight: 700;
    background: #FBB731;
    color: #444;    
    cursor: pointer;
    border-radius: 2px;
    display: none;
    
}  

.back_to_top:hover {
    background: #F37335;    
}  

.back_to_top-show {
    display: block;
}
===
.footer-navs ul li a:hover:before, .pagination ul li a.active:before, .pagination ul li a:hover:before {
    right: 0;
    transition: all .16s ease-in-out;
}
.a:hover:before, .pagination ul li a.active:before, .pagination ul li a:hover:before {
======
 .process {}
.process li:first-child {} // первый li в списке
ul > li:last-child // псевдокласс для выбора последнего дочернего элемента.
.process li:last-child {} // последний li в списке
.process li:nth-child (4) {} // 4й li в списке
.process::before { content: ' ';} // в начале вставляется.
::after // в конце тега вставляется
::hover // при наведении
p::first-line // псевдоэлементы для стилизации части элемента: первой строки параграфа или первой буквы. (только блочные)

display: flex;
justify-content: flex-end;
 justify-content которое выравнивает элементы горизонтально и принимает следующие значения:
justify-content:    flex-start: 	Элементы выравниваются по левой стороне контейнера.
justify-content:    flex-end: 	Элементы выравниваются по правой стороне контейнера.
justify-content:    center: 	Элементы выравниваются по центру контейнера.
justify-content:    space-between: 	Элементы отображаются с одинаковыми отступами между ними.
justify-content:    space-around: 	Элементы отображаются с одинаковыми отступами вокруг них.

 align-items: выравнивает элементы вертикально и принимает следующие значения:

    flex-start: 	Элементы выравниваются по верхнему краю контейнера.
    flex-end: 	Элементы выравниваются по нижнему краю контейнера.
    center: 		Элементы выравниваются вертикально по центру контейнера.
    baseline: 	Элементы отображаются на базовой линии контейнера.
    stretch: 	Элементы растягиваются, чтоб заполнить контейнер.
======
 flex-direction:  задает направление, в котором будут расположены элементы в контейнере.
    row: 		элементы размещаются по направлению текста.
    row-reverse: 	элементы отображаются в обратном порядке к направлению текста.
    column: 	элементы располагаются сверху вниз.
    column-reverse: 	элементы располагаются снизу вверх.
====
display: grid
display: grid;    // формирует сетку как блок.
display: inline-grid   //формирует сетку как строчный блок.
display: subgrid    //если ваш контейнер это ещё и элемент (вложенная сетка), то вы можете использовать это свойство для обозначения того, чтобы размеры строк/колонок были взяты из родительского элемента, а не определяли собственный. 

==
justify-items
Выравнивает содержимое вдоль оси столбца (в отличии от justify-items который выравнивает элементы вдоль оси строки). Это значение применяется ко всем элементам сетки внутри контейнера.

Наследуется: нет.
Применяется ко: всем элементам.
Значение по умолчанию: normal.
start     //выравнивание элементов по верхней части области.
end    //выравнивание элементов по нижней части области.
center     //выравнивание элементов по центру области.
stretch    // заполняет всю высоту области (по умолчанию). 


justify-content

=
тень бокс шедоу box-shadow:
box-shadow: inset 0px 0px 10px rgba(0,0,0,0.5);
тень внутри внутрь inset

== миксины @mixin адаптив
@mixin breakpoint ($point) {
	@if $point == xs {
		@media (min-width: 36em) {@content;}
		}
	@else if $point == sm {
		@media (min-width: 48em) {@content;}
	}
	
}

Как вставить карту Яндекса на сайт, добавить
    Чтобы сайт искался на Яндекс.Картах, его нужно зарегистрировать в Яндекс.Справочнике.
    заполнить пару полей в конструкторе 
    Предполагаю, что лучше на HTML страницу установить код статической схемы, со ссылкой на Яндекс.Карты, поскольку скрипт может барахлить на устройствах с медленным интернетом
    https://yandex.ru/map-constructor/
    "создать карту", забить в поиске адрес, подобрать цвета и иконки. "готово". "сохранить и продолжить". выбрать размер карты. "получить код карты" скопировать ссылку на карту (галочку статично)

==
Дани модалка 
<button class="modal__btn _modal-open" data-modal-open="modal-1">
    <img src="img/click.svg" alt="">
    Click me!
</button>

<div class="_modal" data-modal="modal-1">
    <div class="modal-bg">
        <div class="modal-body">
            <div class="modal-close"><img src="img/close.svg" alt=""></div>
            <div class="modal-content modal-callback">
                <div class="modal-callback__title">Перезвоните нам!</div>
                <div class="modal-callback__text">Lorem ipsum dolor sit amet consectetur adipisicing elit. Eligendi qui culpa reprehenderit praesentium. Natus aliquid dolore excepturi quae illo, odit nihil magnam ut vel perferendis! Eos quaerat harum placeat debitis impedit, fugit modi error earum ab. Fuga, eius atque nesciunt incidunt, sint illum aspernatur voluptatem fugit tenetur, doloremque esse facere eos blanditiis. Quo nesciunt itaque tempore sequi recusandae aut. Maiores ex architecto dolorem? Non quidem accusantium, nesciunt consequuntur labore, debitis quas vel iusto nam dolor molestias assumenda fugit nostrum. Dolorem voluptatem vel incidunt autem laudantium molestias dolorum nemo amet porro exercitationem, praesentium asperiores ipsam placeat eveniet delectus eius ab quo impedit accusamus temporibus ullam aperiam minima. Impedit vel dignissimos nobis minima, aperiam provident, assumenda neque, odit magni deserunt sunt autem natus. Consectetur a quasi saepe voluptas, aperiam nemo suscipit illum harum ea modi est tempora? Veniam praesentium recusandae totam inventore architecto, ab cum ad reprehenderit impedit excepturi exercitationem, soluta, similique omnis molestias minus! Corporis tenetur suscipit odio facilis accusantium enim a recusandae necessitatibus reiciendis velit commodi adipisci harum officiis natus, ad debitis officia, quae praesentium deserunt odit eligendi minima. Autem nesciunt cumque magni provident labore blanditiis aliquid recusandae, dignissimos sapiente ducimus atque qui eius ad cupiditate molestiae explicabo. Ratione soluta recusandae expedita vel distinctio ea officia officiis sint voluptates eos! Reiciendis, nobis! Aut, minus dolore, atque soluta ullam velit sequi impedit aspernatur quidem tempora sunt, exercitationem laboriosam mollitia distinctio consequuntur quod vitae. Cupiditate hic deleniti non, rerum explicabo repellat recusandae dolores unde? Consequuntur necessitatibus libero delectus numquam inventore vitae assumenda modi veniam cum explicabo voluptate accusantium facere amet, magnam ad tempora eos maxime eveniet et, illum reiciendis laborum, porro perferendis. Voluptates illum dolorem error corrupti omnis enim quae officia quaerat deleniti odio ad, assumenda ullam laboriosam consectetur esse distinctio ex. Vel deleniti corporis eveniet reiciendis dolores sed explicabo, quibusdam vitae quae minus adipisci nulla itaque provident, minima pariatur repellat harum ad eligendi corrupti suscipit facere fugit nisi. Aut adipisci quidem dignissimos nihil quasi, nemo corrupti recusandae. Rerum molestias voluptates nemo, iusto pariatur, voluptatum similique repellendus architecto inventore amet doloremque non ad magnam aut porro totam hic ea exercitationem iure reiciendis! Quis molestiae odio tempore laborum. Aspernatur architecto suscipit iure asperiores quod vero quas? Laborum expedita recusandae saepe rem et incidunt neque harum adipisci, dolor minima animi ex alias suscipit doloribus, consequuntur laboriosam architecto nisi rerum hic ducimus cupiditate id dignissimos aspernatur pariatur! Autem iste cumque placeat, facilis soluta, recusandae iusto illo exercitationem rem at, illum nisi. Dolore sed expedita veritatis quod nemo cupiditate earum eum dicta sapiente reiciendis dolorem soluta perferendis facere quas, voluptate ipsum quidem minus in quo provident vel rem qui sequi odio. Nesciunt nam sed libero architecto deserunt voluptatibus ducimus voluptates nostrum, consequatur alias iusto aut doloribus iste suscipit velit cumque, autem dolores ex vero quae itaque. Suscipit eos placeat autem animi, fugiat veritatis possimus et necessitatibus delectus sit unde reiciendis eligendi veniam quidem sed numquam beatae voluptate non facere expedita tenetur! Dolor, nihil tempora, eius blanditiis pariatur magnam necessitatibus molestias mollitia repellat perferendis in quam. Ipsam.</div>
            </div>
        </div>
    </div>
</div>
  /* модальное окно начало */
._locked {
    overflow: hidden;
  }
  
  .modal__btn {
    border: none;
    background-color: #f36262;
    padding: 5px 10px;
    color: #fff;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    gap: 5px;
    font-size: 20px;
    cursor: pointer;
  }
  
  ._modal {
    width: 100%;
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 10;
    visibility: hidden;
    opacity: 0;
    -webkit-transition: all .2s;
    transition: all .2s;
    pointer-events: none;
  }
  
  ._modal._active {
    opacity: 1;
    visibility: visible;
    pointer-events: all;
  }
  
  .modal-bg {
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    padding: 20px;
  }
  
  .modal-body {
    padding: 24px;
    background-color: #fff;
    width: 700px;
    margin: auto;
    max-height: 90%;
    overflow: auto;
    border-radius: 16px;
    position: relative;
  }
  
  .modal-close {
    position: absolute;
    top: 16px;
    right: 16px;
    cursor: pointer;
  }
  /* модальное окно конец  */



const modalBtns = document.querySelectorAll('._modal-open');
const modals = document.querySelectorAll('._modal');

const body = document.body;

function openModal(elem) {
	elem.classList.add('_active');
	body.classList.add('_locked')
}

function closeModal(e) {
	if (e.target.classList.contains('modal-close') || e.target.closest('.modal-close') || e.target.classList.contains('modal-bg')) {
		e.target.closest('._modal').classList.remove('_active');
		body.classList.remove('_locked')
	}
}

modalBtns.forEach(btn => {
	btn.addEventListener('click', (e) => {
		let data = e.target.dataset.modalOpen;

		modals.forEach(modal => {
			if (modal.dataset.modal == data || modal.dataset.modal == e.target.closest('._modal-open').dataset.modalOpen) {
				openModal(modal)
			}
		})
	})
})

modals.forEach(modal => {
	modal.addEventListener('click', e => closeModal(e))
})
// выход по кнопке Escape 
window.addEventListener('keydown', e => {
	modals.forEach(modal => {
		if (e.key === "Escape" && modal.classList.contains('_active')) {
			modal.classList.remove('_active');
			body.classList.remove('_locked');
		}
	})
})


еще модалка старая 
<!-- мобильное меню 1-1 модалка -->

<form action="#" class="modal block_center" >
    <div class="modal__inner">
        <button type="button" class="modal__close"></button>
        <h2 class="modal__header">регистрация</h2>
        <div class="modal__elements">
            <div class="modal__item">
                <input class="modal__input" type="text" placeholder="Ваше имя">
            </div>
            <div class="modal__item">
                <input class="modal__input" type="email" placeholder="e-mail">
            </div>
            <div class="modal__item">
                <input class="modal__input" type="tel" placeholder="номер телефона">
            </div>
        </div>
        <button type="submit">Отправить</button>
    </div>
</form>
<!-- мобильное меню 1-2 css -->
.block_center {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}
.modal {
  position: fixed;
  inset: 0;
  width: 100%;
  height: 100%;
  overflow-x: hidden;
  overflow-x: auto;
  padding: 3rem 0;
  background: rgba(0, 0, 0, 0.8);
  z-index: 10;
  visibility: hidden;
  opacity: 0;
  transition: 1s linear;
}
.modal__inner {
    max-width: 663px;
    width: 100%;
    padding: 9rem 9.5rem;
    background-color: #fff;
    text-align: center;
}

.modal__close {
    position: absolute;
    top: 30px;
    right: 30px;
    display: block;
    height: 30px;
    width: 30px;
    background-image: url(../image/close.svg);
    background-repeat: no-repeat;
    background-size: contain;
    background-color: transparent;
.modal__elements {
    margin: 0 auto;
    max-width: 44.4rem;
}
.noscroll {
    overflow: hidden;
    height: 100%;
}

// modal window
const modalWindow = document.querySelector('.modal');
const buttonModals = document.querySelectorAll('.modal__button');
const modalClose = document.querySelector('.modal__close');
const body = document.querySelector('body');

// по клику по кнопке включаем меню  
// убираем прокрутку с body 
buttonModals.forEach((item) => {
	item.addEventListener('click', () => {
		// modalWindow.style.display = 'flex', background = `red`;
		 
		modalWindow.style.cssText = `	
		visibility: visible;
		opacity: 1;
		`;
		body.classList.add('noscroll');
	});
});
// закрываем модалку при нажатии вне
// вернем прокрутку в body  
modalWindow.addEventListener('click', (e) => {
	const isModal = e.target.closest('.modal__inner');
	if (!isModal) {
	modalWindow.style.cssText = `	
	visibility: hidden;
	opacity: 0;
	`;
	body.classList.remove('noscroll');
}
});
// по клику на крестик включаем скрол 
modalClose.addEventListener('click', () => {
	modalWindow.style.cssText = `	
	visibility: hidden;
	opacity: 0;
	`;
	body.classList.remove('noscroll');
})









